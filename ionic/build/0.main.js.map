{"version":3,"sources":["../../src/pages/world-city-list/world-city-list.module.ts","../../src/directives/animate-item-sliding/animate-item-sliding.ts","../../src/directives/directives.module.ts","../../src/directives/index.ts","../../src/pages/world-city-list/world-city-list.ts"],"names":[],"mappings":"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","file":"0.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { WorldCityListPage } from './world-city-list';\nimport { DirectivesModule } from '../../directives';\n\n@NgModule({\n  declarations: [\n    WorldCityListPage\n  ],\n  imports: [\n    DirectivesModule,\n    IonicPageModule.forChild(WorldCityListPage)\n  ],\n  exports: [\n    WorldCityListPage\n  ]\n})\nexport class WorldCityListPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/world-city-list/world-city-list.module.ts","import { Directive, ElementRef, Input, OnInit, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[animateItemSliding]'\n})\nexport class AnimateItemSliding implements OnInit {\n  @Input('animateItemSliding') shouldAnimate: boolean;\n\n  constructor(public element: ElementRef,\n              public renderer: Renderer2) {\n  }\n\n  ngOnInit() {\n    if (this.shouldAnimate) {\n      this.renderer.addClass(this.element.nativeElement, 'active-slide');\n      this.renderer.addClass(this.element.nativeElement, 'active-options-right');\n      // Wait to apply animation\n      setTimeout(() => {\n        this.renderer.addClass(this.element.nativeElement.firstElementChild, 'itemSlidingAnimation');\n        // disables after first animation\n        setTimeout(() => {\n          this.renderer.removeClass(this.element.nativeElement, 'active-slide');\n          this.renderer.removeClass(this.element.nativeElement, 'active-options-right');\n          this.renderer.removeClass(this.element.nativeElement.firstElementChild, 'itemSlidingAnimation');\n        }, 1000);\n      }, 500);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/animate-item-sliding/animate-item-sliding.ts","import { NgModule } from '@angular/core';\nimport { AnimateItemSliding } from './animate-item-sliding/animate-item-sliding';\n\n@NgModule({\n  declarations: [\n    AnimateItemSliding\n  ],\n  exports: [\n    AnimateItemSliding\n  ]\n})\nexport class DirectivesModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/directives.module.ts","export { DirectivesModule } from './directives.module';\n\n\n\n// WEBPACK FOOTER //\n// ./src/directives/index.ts","import { Component, OnInit } from '@angular/core';\nimport { IonicPage, ModalController, NavController } from 'ionic-angular';\nimport { Subscription } from 'rxjs/Subscription';\nimport {\n  CONFIG,\n  DatabaseService,\n  DataPoint,\n  DEFAULT_METRICS,\n  Forecast,\n  ForecastService,\n  Location,\n  Metrics,\n  UtilService\n} from '../../providers';\nimport * as _ from 'lodash';\n\n@IonicPage()\n@Component({\n  selector: 'page-world-city-list',\n  templateUrl: 'world-city-list.html'\n})\nexport class WorldCityListPage implements OnInit {\n  arrWorldWeather: Array<WorldWeather>;\n  subscribers: Array<Subscription>;\n  metrics: Metrics;\n\n  constructor(public navCtrl: NavController,\n              public databaseService: DatabaseService,\n              public utilService: UtilService,\n              public forecastService: ForecastService,\n              public modalCtrl: ModalController) {\n  }\n\n  ngOnInit() {\n    let self = this;\n    self.arrWorldWeather = [];\n    self.subscribers = [];\n    self.databaseService.get('stopDeleteAnimation').then(stop => {\n      self.databaseService.getAllWorldLocations().then(locations => {\n        _.forEach(locations, (location, index) => {\n          self.arrWorldWeather.push({\n            location: location,\n            firstDailyForecast: null,\n            timezone: null,\n            shouldAnimate: stop ? false : index === 0\n          });\n        });\n        self.updateForecast();\n      });\n    });\n  }\n\n  ionViewWillEnter() {\n    let self = this;\n    this.databaseService.getJson(CONFIG.METRICS).then(data => {\n      if (data === null) {\n        self.databaseService.setJson(CONFIG.METRICS, DEFAULT_METRICS);\n        self.metrics = DEFAULT_METRICS;\n      } else {\n        self.metrics = data;\n      }\n    });\n    self.updateForecast();\n  }\n\n  ionViewWillLeave() {\n    _.forEach(this.subscribers, sub => sub.unsubscribe());\n  }\n\n  updateForecast() {\n    let self = this;\n    _.forEach(self.arrWorldWeather, wwObj => {\n      let sub = self.forecastService.getForecast(wwObj.location, true)\n        .subscribe((forecast: Forecast) => {\n          if (forecast && forecast.daily && forecast.daily.data) {\n            wwObj.firstDailyForecast = forecast.daily.data[0];\n            wwObj.timezone = forecast.timezone;\n          }\n        }, err => {\n          console.error(err);\n        });\n      self.subscribers.push(sub);\n    });\n  }\n\n  addLocation() {\n    let self = this;\n    let modal = self.modalCtrl.create('LocationPage', { heading: 'Add New City' });\n    modal.onDidDismiss((data: Location) => {\n      if (!data) {\n        return;\n      }\n      self.databaseService.addWorldLocation(data).then(success => {\n        if (!success) {\n          return;\n        }\n        let exists = _.find(self.arrWorldWeather, obj => obj.location.name === data.name);\n        if (exists) {\n          self.utilService.showToast(data.name + ' already exists');\n          return;\n        }\n        self.arrWorldWeather.push({\n          location: data,\n          firstDailyForecast: null,\n          timezone: null,\n          shouldAnimate: false\n        });\n        self.forecastService.getForecast(data)\n          .subscribe((forecast: Forecast) => {\n            if (forecast && forecast.daily && forecast.daily.data) {\n              let obj = _.find(self.arrWorldWeather, { location: data });\n              if (obj) {\n                obj.firstDailyForecast = forecast.daily.data[0];\n                obj.timezone = forecast.timezone;\n              }\n            }\n          }, err => {\n            console.error(err);\n          });\n      });\n    });\n    modal.present();\n  }\n\n  delete(location: Location) {\n    let self = this;\n    self.databaseService.removeWorldLocation(location.name).then(success => {\n      if (success) {\n        _.remove(self.arrWorldWeather, obj => obj.location.name === location.name);\n      }\n    });\n    self.databaseService.set('stopDeleteAnimation', 'true');\n  }\n\n  locationClicked(location: Location) {\n    this.navCtrl.push('CityWeatherPage', { location: location });\n  }\n}\n\nexport interface WorldWeather {\n  location: Location;\n  firstDailyForecast: DataPoint;\n  timezone: string;\n  shouldAnimate: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/world-city-list/world-city-list.ts"],"sourceRoot":""}